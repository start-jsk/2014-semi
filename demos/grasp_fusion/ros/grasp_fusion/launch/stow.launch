<launch>
  <arg name="main" default="true" />
  <arg name="rviz" default="true" />
  <arg name="moveit" default="true" />
  <arg name="smach_viewer" default="false" />
  <arg name="rosbag" default="false" />
  <arg name="data_collection" default="false" />

  <arg name="left_main" default="true" />
  <!-- FIXME: We cannot launch pipeline for right hand camera due to shortage of GPU memory-->
  <!-- <arg name="right_main" default="true" /> -->

  <!-- state_server -->
  <node pkg="jsk_arc2017_baxter" type="state_server.py" name="state_server">
    <rosparam>
      is_pick: false
    </rosparam>
  </node>

  <!-- smach viewer -->
  <node pkg="smach_viewer" type="smach_viewer.py" name="smach_viewer" if="$(arg smach_viewer)"/>

  <!-- parameter -->
  <param name="/left_hand/target_bin" value="" />
  <param name="/right_hand/target_bin" value="" />

  <node name="rqt_yn_btn"
        pkg="jsk_rqt_plugins" type="rqt_yn_btn">
    <remap from="~" to="/rviz/yes_no_button" />
  </node>

  <group if="$(arg rviz)">
    <node name="rviz"
          pkg="rviz" type="rviz"
          args="-d $(find grasp_fusion)/rvizconfig/stow.rviz">
    </node>
  </group>

  <!-- robot main -->
  <group if ="$(arg main)">
    <group if="$(arg left_main)">
      <node if="$(arg moveit)" pkg="grasp_fusion" type="stow-main.l" name="left_hand_main"
            args="&quot;(progn (stow-init :ctype :larm-head-controller :moveit t) (stow-mainloop :larm))&quot;"
            respawn="true" output="screen">
        <env name="DISPLAY" value="" />
        <rosparam subst_value="true">
          data_collection: $(arg data_collection)
        </rosparam>
      </node>
      <node unless="$(arg moveit)" pkg="grasp_fusion" type="stow-main.l" name="left_hand_main"
            args="&quot;(progn (stow-init :ctype :larm-head-controller :moveit nil) (stow-mainloop :larm))&quot;"
            respawn="true" output="screen">
        <env name="DISPLAY" value="" />
        <rosparam subst_value="true">
          data_collection: $(arg data_collection)
        </rosparam>
      </node>
    </group>
    <!--
    <group if="$(arg right_main)">
      <node if="$(arg moveit)" pkg="grasp_fusion" type="stow-main.l" name="right_hand_main"
            args="&quot;(progn (stow-init :ctype :rarm-head-controller :moveit t) (stow-mainloop :rarm))&quot;"
            respawn="true" output="screen">
        <env name="DISPLAY" value="" />
        <rosparam subst_value="true">
          data_collection: $(arg data_collection)
        </rosparam>
      </node>
      <node unless="$(arg moveit)" pkg="grasp_fusion" type="stow-main.l" name="right_hand_main"
            args="&quot;(progn (stow-init :ctype :rarm-head-controller :moveit nil) (stow-mainloop :rarm))&quot;"
            respawn="true" output="screen">
        <env name="DISPLAY" value="" />
        <rosparam subst_value="true">
          data_collection: $(arg data_collection)
        </rosparam>
      </node>
    </group>
    -->
  </group>

  <!-- visualization -->
  <node name="rosconsole_overlay_text"
        pkg="jsk_rviz_plugins" type="rosconsole_overlay_text.py">
    <rosparam>
      nodes:
        - /left_hand_main
        - /right_hand_main
      exclude_regexes:
        - .*follow_joint_trajectory.*
        - .*:joint-angle.*
        - .*:wait-interpolation-until.*
        - ^;;.*
        - if you do not have gripper,.*
    </rosparam>
  </node>

  <group if="$(arg rosbag)">
    <arg name="rosbag_filename" />
    <include file="$(find grasp_fusion)/launch/include/record_rosbag.launch">
      <arg name="filename" value="$(arg rosbag_filename)" />
    </include>
  </group>

  <group if="$(arg data_collection)">
    <include file="$(find jsk_arc2017_baxter)/launch/setup/include/data_collection_server.launch">
      <arg name="pick" value="false" />
    </include>
  </group>

</launch>
