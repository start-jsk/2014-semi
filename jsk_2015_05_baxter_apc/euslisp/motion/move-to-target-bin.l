(load "package://jsk_2014_picking_challenge/euslisp/motion/robot-motion-common.l")

(defun move-to-target-bin-av (arm bin)
  (cond ((find bin '(:a :b :c)) (fold-pose-up arm))
        ((find bin '(:d :e :f :g :i)) (fold-pose-mid arm))
        ((find bin '(:j :k :l :h)) (fold-pose-low arm))
        (t (return-from move-to-target-bin-av nil)))
  ;; move arm to the position 90mm away from the target bin
  (send *baxter* arm :inverse-kinematics (make-cascoords :pos (v+ (send *pod* bin) #f(-90 0 0))) :rotation-axis t)
  (send *baxter* :angle-vector))

(defun move-to-target-bin (arm bin)
  (let (avs)
    (pushback (look-at-other-side arm) avs)
    (pushback (send *baxter* arm :move-end-pos #f(-100 0 0) :world :revert-if-fail nil :rotation-axis nil) avs)
    (send *irtviewer* :draw-objects)
    (pushback (move-to-target-bin-av arm bin) avs)
    (send *irtviewer* :draw-objects)
    (send *ri* :angle-vector-sequence avs :fast :default-controller 0 :scale 3.3)
    (send *ri* :wait-interpolation)
    avs))
