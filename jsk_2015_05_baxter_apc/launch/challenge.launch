<launch>
  <arg name="DEBUG" default="true" />
  <arg name="custom" default="true"/>
  <arg name="tweet" default="true"/>
  <arg name="bof" default="true"/>
  <arg name="sift" default="false"/>
  <arg name="color" default="false"/>
  <arg name="launch_main" default="false"/>
  <arg name="cameras_setup" default="false"/>
  <env name="DISPLAY" value="" unless="$(arg DEBUG)" />

  <include file="$(find jsk_2014_picking_challenge)/launch/upload_baxter.launch">
    <arg name="custom" value="$(arg custom)"/>
  </include>

  <include file="$(find jsk_2014_picking_challenge)/launch/kinect2_tf.launch"></include>

  <!-- rosserial -->
  <node pkg="rosserial_python" type="serial_node.py" name="rosserial_node" output="screen" respawn="true">
    <param name="port" type="string" value="/dev/ttyUSB0" />
  </node>

  <!-- json -->
  <node pkg="jsk_2014_picking_challenge" type="bin_contents.py" name="bin_contents" output="log">
    <param name="json" value="$(find jsk_2014_picking_challenge)/data/example.json" />
  </node>
  <node pkg="jsk_2014_picking_challenge" type="work_order.py" name="work_order" output="log">
    <param name="json" value="$(find jsk_2014_picking_challenge)/data/example.json" />
  </node>

  <!-- parameter -->
  <node pkg="jsk_2014_picking_challenge" type="setup_target.py" name="setup_target" output="log">
    <param name="json" value="$(find jsk_2014_picking_challenge)/data/example.json" />
  </node>
  <param name="/left_limb/state" value="pick_object" />
  <param name="/right_limb/state" value="pick_object" />

  <!-- main -->
  <node if="$(arg launch_main)" pkg="jsk_2014_picking_challenge" type="robot-main.l" name="challenge_main"
	args="&quot;(progn (apc-init) (main))&quot;"/>

  <!-- recognition -->
  <include file="$(find jsk_2014_picking_challenge)/launch/passthrough_image.launch">
    <arg name="custom" value="$(arg custom)"/>
  </include>
  <group if="$(arg sift)">
    <!-- sift -->
    <include file="$(find jsk_2014_picking_challenge)/launch/sift_matcher.launch">
      <arg name="input_image" value="/apply_mask/output" />
      <arg name="input_info" value="/kinect2/rgb/camera_info" />
    </include>
  </group>
  <group if="$(arg color)">
    <!-- color histogram -->
    <include file="$(find jsk_2014_picking_challenge)/launch/red_color_histogram_matcher.launch">
      <arg name="input_image" value="/apply_mask/output" />
      <arg name="input_info" value="/kinect2/rgb/camera_info" />
    </include>
    <include file="$(find jsk_2014_picking_challenge)/launch/lab_color_histogram_matcher.launch">
      <arg name="input_image" value="/apply_mask/output" />
      <arg name="input_info" value="/kinect2/rgb/camera_info" />
    </include>
  </group>
  <group if="$(arg bof)">
    <!-- bag of features -->
    <include file="$(find jsk_2014_picking_challenge)/launch/bof_object_matcher.launch">
      <arg name="input_image" value="/apply_mask/output" />
      <arg name="input_info" value="/kinect2/rgb/camera_info" />
    </include>
  </group>

  <group if="$(arg tweet)">
    <!-- tweet -->
    <group if="$(arg cameras_setup)">
      <param name="lhand_camera_closer" command="rosrun baxter_tools camera_control.py -c left_hand_camera" />
      <node pkg="baxter_tools" type="camera_control.py" name="head_camera_opener" args=" -o head_camera"/>
    </group>
    <node pkg="jsk_2014_picking_challenge" type="apc_tweet.l" name="apc_tweet"/>
  </group>
</launch>